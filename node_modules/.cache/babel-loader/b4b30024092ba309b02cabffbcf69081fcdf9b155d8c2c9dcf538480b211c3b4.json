{"ast":null,"code":"var _jsxFileName = \"F:\\\\Charitha\\\\React app\\\\my-react-app\\\\calculator-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(''); // Stores the current input\n  const [result, setResult] = useState(''); // Stores the result\n\n  // Handle button clicks\n  const handleClick = value => {\n    if (value === '=') {\n      try {\n        setResult(eval(input).toString()); // Evaluate the input\n      } catch (error) {\n        setResult('Error');\n      }\n    } else if (value === 'C') {\n      setInput(''); // Clear input\n      setResult('');\n    } else if (value === '←') {\n      setInput(input.slice(0, -1)); // Backspace\n    } else {\n      setInput(input + value); // Append value to input\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CALCULATOR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: ['7', '8', '9', '/', '4', '5', '6', '*', '1', '2', '3', '-', '0', '.', '=', '+', 'C', '←'].map(btn => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(btn),\n        children: btn\n      }, btn, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Rn2yf1jfSoSMg1/LTdctDCg0n5U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","input","setInput","result","setResult","handleClick","value","eval","toString","error","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","readOnly","map","btn","onClick","_c","$RefreshReg$"],"sources":["F:/Charitha/React app/my-react-app/calculator-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [input, setInput] = useState(''); // Stores the current input\n  const [result, setResult] = useState(''); // Stores the result\n\n  // Handle button clicks\n  const handleClick = (value) => {\n    if (value === '=') {\n      try {\n        setResult(eval(input).toString()); // Evaluate the input\n      } catch (error) {\n        setResult('Error');\n      }\n    } else if (value === 'C') {\n      setInput(''); // Clear input\n      setResult('');\n    } else if (value === '←') {\n      setInput(input.slice(0, -1)); // Backspace\n    } else {\n      setInput(input + value); // Append value to input\n    }\n  };\n\n  return (\n    <div className=\"calculator\">\n      <h1>CALCULATOR</h1>\n      <div className=\"display\">\n        <input type=\"text\" value={input} readOnly />\n        <div className=\"result\">{result}</div>\n      </div>\n      <div className=\"buttons\">\n        {['7', '8', '9', '/', '4', '5', '6', '*', '1', '2', '3', '-', '0', '.', '=', '+', 'C', '←'].map((btn) => (\n          <button key={btn} onClick={() => handleClick(btn)}>\n            {btn}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAMS,WAAW,GAAIC,KAAK,IAAK;IAC7B,IAAIA,KAAK,KAAK,GAAG,EAAE;MACjB,IAAI;QACFF,SAAS,CAACG,IAAI,CAACN,KAAK,CAAC,CAACO,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;MACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdL,SAAS,CAAC,OAAO,CAAC;MACpB;IACF,CAAC,MAAM,IAAIE,KAAK,KAAK,GAAG,EAAE;MACxBJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MACdE,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,MAAM,IAAIE,KAAK,KAAK,GAAG,EAAE;MACxBJ,QAAQ,CAACD,KAAK,CAACS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,MAAM;MACLR,QAAQ,CAACD,KAAK,GAAGK,KAAK,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC;EAED,oBACER,OAAA;IAAKa,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBd,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBlB,OAAA;MAAKa,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBd,OAAA;QAAOmB,IAAI,EAAC,MAAM;QAACX,KAAK,EAAEL,KAAM;QAACiB,QAAQ;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5ClB,OAAA;QAAKa,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAET;MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACNlB,OAAA;MAAKa,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACO,GAAG,CAAEC,GAAG,iBAClGtB,OAAA;QAAkBuB,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAACe,GAAG,CAAE;QAAAR,QAAA,EAC/CQ;MAAG,GADOA,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAtCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}